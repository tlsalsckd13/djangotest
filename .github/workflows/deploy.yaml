name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 푸시할 때 파이프라인이 실행됩니다.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # 리포지토리의 코드를 체크아웃합니다.

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9  # Python 3.9을 설정합니다.

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # 의존성을 설치합니다.

    - name: Build Docker image
      run: |
        docker build -t tlsalsckd13/djangotest:${{ github.sha }} .  # Docker 이미지를 빌드합니다.

    - name: Push Docker image to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
        docker push tlsalsckd13/djangotest:${{ github.sha }}  # Docker 이미지를 Docker Hub에 푸시합니다.

  deploy:
    runs-on: ubuntu-latest
    needs: build  # 빌드 단계가 성공적으로 완료된 후에 실행됩니다.

    steps:
    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/django-app django-app=your-dockerhub-username/django-app:${{ github.sha }}  # Kubernetes 배포를 업데이트합니다.
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}  # Kubernetes 클러스터에 접근하기 위해 KUBECONFIG를 설정합니다.
